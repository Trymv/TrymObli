#BlueJ class context
comment0.target=Register
comment0.text=\r\n\ This\ class\ is\ to\ make\ a\ register\ for\ readable's\ such\ as\ books\ with\ "ArrayList".\r\n\r\n\ @author\ Group\ 18\r\n\ @version\ 1.1\r\n
comment1.params=
comment1.target=Register()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Register\r\n
comment10.params=search
comment10.target=Literature\ searchByName(java.lang.String)
comment10.text=\r\n\ Search\ on\ a\ literature\ if\ the\ list\ has\ a\ match\ that\ contains\ a\ word\ from\ the\ parameter.\r\n\ @param\ search\ put\ in\ the\ string\ of\ the\ literature\ you\ want\ to\ search\ for\r\n\ in\ the\ array\ list\ "bookRegister".\r\n\ @return\ searchResult\ will\ return\ the\ found\ literature.\ If\ not\ found\ it\ will\ return\ null.\r\n
comment2.params=
comment2.target=java.util.ArrayList\ getBookRegister()
comment2.text=\r\n\ Return\ the\ array\ list\ literatureRegister.\r\n\ @return\ literatureRegister\ as\ array\ list.\r\n
comment3.params=literature
comment3.target=void\ add(Literature)
comment3.text=\r\n\ Add\ a\ book\ to\ the\ literature\ register.\r\n\ @param\ literature\ add\ the\ book\ to\ the\ literature\ register\ (ArrayList).\r\n
comment4.params=objectToBeRemoved
comment4.target=boolean\ removeLiterature(java.lang.String)
comment4.text=\r\n\ Use\ iterator\ to\ search\ though\ literatureRegister\ with\ a\ parameter.\r\n\ If\ an\ exact\ match\ is\ found\ the\ object\ will\ be\ removed.\r\n\ @param\ objectToBeRemoved\ remove\ the\ book\ from\ the\ book\ register\ (ArrayList).\r\n\ @return\ true\ if\ object\ was\ successfully\ removed.\r\n
comment5.params=seriesTitle\ newLiterature
comment5.target=void\ addLiteratureToSeries(java.lang.String,\ Book)
comment5.text=\r\n\ Uses\ a\ iterator\ to\ search\ for\ a\ literature,\ if\ the\ iterator\ find\ a\ literature\r\n\ with\ a\ title\ witch\ equals\ seriesTitle\ and\ is\ an\ instance\ of\ BookSeries\ a\ new\ Book\r\n\ will\ be\ added\ to\ the\ series.\r\n\ @param\ seriesTitle\ title\ of\ the\ series\ you\ want\ to\ add\ book\ to.\r\n\ @param\ newLiterature\ title\ of\ the\ literature\ you\ want\ to\ add.\r\n
comment6.params=seriesTitle\ literatureToBeRemoved
comment6.target=void\ removeLiteratureFromSeries(java.lang.String,\ java.lang.String)
comment6.text=\r\n\r\n\ @param\ seriesTitle\ title\ of\ the\ series\ you\ want\ to\ remove\ book\ from.\r\n\ @param\ literatureToBeRemoved\ title\ of\ the\ literature\ you\ want\ to\ remove.\r\n
comment7.params=literatureTitle
comment7.target=boolean\ doLiteratureExist(java.lang.String)
comment7.text=\r\n\ Checks\ if\ a\ literature\ with\ input\ name\ already\ exists\ in\ the\ register.\r\n\ If\ it\ already\ exist\ it\ will\ return\ true.\r\n\ @param\ literatureTitle\ name\ of\ register\ to\ check.\r\n\ @return\ true\ if\ literature\ already\ exist\ in\ the\ register.\r\n
comment8.params=
comment8.target=java.lang.String\ listAllLiteratures()
comment8.text=\r\n\ List\ all\ books\ in\ the\ book\ register\ on\ the\ terminal.\r\n\ @return\ bookList\ list\ of\ the\ titles\ of\ all\ the\ books\r\n
comment9.params=
comment9.target=int\ getArrayLength()
numComments=11
